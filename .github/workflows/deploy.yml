# This is the GitHub Actions workflow for Phase 4 - CI/CD Integration
# It automates build, test, and deployment to an AWS EKS cluster using Helm

name: CI/CD to EKS using Helm

on:
  # Trigger this workflow on every push to the main branch
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy to EKS via Helm
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the source code from the repository
    - name: Checkout repo
      uses: actions/checkout@v3

    # Step 2: Configure AWS credentials using GitHub Secrets
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 3: Install kubectl CLI for interacting with Kubernetes clusters
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3

    # Step 4: Install Helm CLI for Kubernetes package management
    - name: Set up Helm
      uses: azure/setup-helm@v3

    # Step 5: Configure kubectl to talk to the EKS cluster using AWS CLI
    - name: Generate kubeconfig for EKS
      run: |
        aws eks update-kubeconfig           --region us-east-2           --name otel-demo-cluster

    # Step 6: Simulated Docker image build (for CI pipeline completeness)
    - name: Build Docker image (simulated)
      run: echo "docker build -t myapp:latest ."

    # Step 7: Simulated automated test run (for CI pipeline completeness)
    - name: Run automated tests (simulated)
      run: echo "Running automated tests... All tests passed!"

    # Step 8: Add Helm chart repository and update to get latest charts
    - name: Add Helm repo
      run: |
        helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
        helm repo update

    # Step 9: Deploy OpenTelemetry demo using Helm with rollback on failure
    - name: Deploy with Helm
      run: |
        helm upgrade --install otel-demo open-telemetry/opentelemetry-demo           --namespace otel-helm --create-namespace           --version 0.20.1 || helm rollback otel-demo

    # Step 10: Verify the deployment by listing all resources in the namespace
    - name: Verify Deployment
      run: kubectl get all -n otel-helm
